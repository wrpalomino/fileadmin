<?php

/**
 * CourtDate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class CourtDate extends BaseCourtDate
{
  private $save_iclouddate_status;
  
  public function save(Doctrine_Connection $conn = null)
  {
    if ( (sfContext::getInstance()->getModuleName() == 'file') && $this->isNew() && (sfConfig::get("app_icloudservice_active")) ) {
      // only save if the ICalendar event is saved too.
      if (!$this->saveICalDate()) {
        sfContext::getInstance()->getUser()->setFlash('info', 'Court date(s) and ICalendar event(s) could not be saved. <b>ERROR:</b> '.$this->getSaveICalDateStatus());
        return null;
      }
      else {
        sfContext::getInstance()->getUser()->setFlash('info', $this->getSaveICalDateStatus());
        return parent::save();
      }
    }
    else {
      return parent::save();
    }
  }
  
  
  function saveICalDate($values=null)
  {
    $send_OK = false;
    
    $datetime = date("Y m d H i s", strtotime("now"));
    $startTime = $endTime = '';
    $userFile = $solicitor = $court = null;
    
    if ($values !== null) {  // Court module: court form postvalidation method used
      if ($values['date'] != "") $datetime = trim($values['date']." ".$values['time']);
      if ($values['time'] != "") {
        $startTime = date("h:i A", strtotime($values['time']));
        $endTime = date("h:i A", strtotime('+30 minutes', strtotime($values['time'])));
      }
      
      // court object has not been bound yet, related objects ids used
      $userFile = Doctrine::getTable('UserFile')->find($values['user_file_id']);
      if ($values['appearing_id'] != '') $solicitor = Doctrine::getTable('SfGuardUser')->find($values['appearing_id']);
      if ($values['court_id'] != '') $court = Doctrine::getTable('Agency')->find($values['court_id']);
    }
    else { // UserFile module: userFile is saved but be sure that the court is bound and valid
      $userFile = $this->getUserFile();
      if ($userFile) {
        $datetime = $this->getTime();
        $startTime = date("h:i A", strtotime($datetime));
        $endTime = date("h:i A", strtotime('+30 minutes', strtotime($datetime)));
        $solicitor = $this->getAppearing();
        $court = $this->getCourt();
      }
    }
    
    if ($userFile) {  // define parameters for ical event only if there is a valid court date with its user file 
      $icloud_api = new ICloud("icloudservice");
      $ical_filename = 'CourtDate-'.time();      
      $summary = $this->getICalSummary($userFile, $court, $solicitor);
      
      $description = $this->getClientName($userFile);
      $description.= ($solicitor) ? '\n'.$this->getAppearingName($solicitor) : "";
      $description.= ($court) ? '\n'.$this->getCourtName($court) : "";
      $description.= '\n'.date('D, j F Y', strtotime($datetime));
      if ($startTime != "") $description.= "; ".$startTime." - ".$endTime;
      $description.= '\nFile Number: '.$userFile->getNumber();
      $description.= '\nClient Phones: '.$this->getFilePhoneNumbers($userFile);
      
      $tstart = date("Ymd\THis", strtotime($datetime));
      $tend = date("Ymd\THis", strtotime('+30 minutes', strtotime($datetime)));

      $send_OK = $icloud_api->saveEvent(array('eid' => $ical_filename, 'description' => $description, 'summary' => $summary, 'tstart' => $tstart, 'tend' => $tend));
      $this->save_iclouddate_status = $icloud_api->getSendMessageStatus();
    }
    else {
      $this->save_iclouddate_status = 'No valid court date(s) and/or user file defined';
    }
    
    return $send_OK;
  }
  
  public function getSaveICalDateStatus()
  {
    return $this->save_iclouddate_status;
  }
  
  public function getSenderName()
  {
    return sfContext::getInstance()->getUser()->getGuardUser()->obtainFullName();
  }
  
  public function obtainClientId($module_name)
  {
    return $this->getUserFile()->getClientId();
  }
  
  public function obtainUserFileId($module_name)
  {
    return $this->getUserFileId();
  }
  
  public function getAppearingName($solicitor = null)
  {
    if ($solicitor === null) $solicitor = $this->getAppearing();
    return $solicitor->obtainFullName();
  }
  
  public function getCourtName($court = null)
  {
    if ($court === null) $court = $this->getCourt();
    return $court->getName();
  }
  
  public function getListingName()
  {
    return $this->getListing()->getName();
  }
  
  public function getJudgeName()
  {
    return $this->getJudge()->obtainFullName();
  }
  
  public function getClientName($userFile = null)
  {
    if ($userFile === null) $userFile = $this->getUserFile();
    return $userFile->getClient()->obtainFullName();
  }
  
  public function getICalSummary($userFile, $court, $solicitor)
  {
    //$summary = "CourtDate";
    $summary = ucwords(trim($userFile->getLastName()).', '.trim($userFile->getFirstName()));
    
    if ($solicitor) $summary.= ' ('.$solicitor->getInitials().')';
   
    if ($court) {
      // gte rid of the apostrophes, single quotes, hard to get using simple _str_replace
      $court_name = trim(strtolower($this->getCourtName($court)));
      $court_name = preg_replace('/magistrates.*? court/', 'magistrates court', $court_name);
      $court_name = preg_replace('/children.*? court/', 'children court', $court_name);

      $search = array("magistrates court", "county court", "supreme court", "children court");
      $replace = array("MC", "County", "Supreme", "CHC");
      $court_name = str_replace($search, $replace, $court_name);
      if ($court_name != "") $summary.= " - ".ucwords($court_name);
    }
    
    return $summary;
  }
  
  
  public function getFilePhoneNumbers($userFile = null)
  {
    if ($userFile === null) $userFile = $this->getUserFile();
    return $userFile->getContactData('ical');
  }
  
  
  public function getReadableCourtDate($userFile = null, $courtDateTxt = null)
  {
    if ($userFile === null)      $userFile = $this->getUserFile();
    if ($courtDateTxt === null)  $courtDateTxt = $this->getDate();
    return 'File: '.$userFile->getNumber().' | Court Date: '.$courtDateTxt;
  }
  
  public function getCustomResult($w_extra_info='')
  {
    if (empty($w_extra_info)) return $this->getResult();
    
    $result_text = "";
    if ($w_extra_info == 'w_preface')  {
      $result_text.= "We confirm the result of your appearance at Court.\n".
              $this->getUserFile()->getSolicitor()->obtainFullName()." appeared before ".
              $this->getJudge()->obtainFullName('w_honorific')." who made the following order:\n".
              $this->getResult();
    }
    return $result_text;
  }
  
  public function getDateFormatted($format='')
  {
    return ($format != '') ? date($format, strtotime($this->getDate())): $this->getDate();
  }
  
  public function getTimeFormatted($format='')
  {
    $date_time = explode(' ',$this->getTime());
    $time = isset($date_time[1]) ? $date_time[1] : '';
    return ($format != '') ? date($format, strtotime($time)) : $time;
  }
  
}