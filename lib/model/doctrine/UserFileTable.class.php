<?php

/**
 * UserFileTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class UserFileTable extends Doctrine_Table
{
  private static $bail_on_this_options = array(
    '' => '',
    'OBA' => 'On Bail',
    'OSU' => 'On Summons',
    'IRE' => 'In Remand',
  );
  private static $yesnonc_options = array(
      '' => '', 
      'YES' => 'Yes', 
      'NO' => 'No', 
      'NA'  => 'N/A'
  );
    
  /**
    * Returns an instance of this class.
    *
    * @return object UserFileTable
    */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('UserFile');
  }
  
  public function getBailOnThisOptions()
  {
    return self::$bail_on_this_options;
  }
  
  public function getYesNoNcOptions($with_blank = true, $with_na = true) 
  {
    if (!$with_blank)  unset(self::$yesnonc_options['']);
    if (!$with_na)  unset(self::$yesnonc_options['NA']);
    return self::$yesnonc_options;
  }
  
  
  public static function getCurrentFileNumber()
  {
    $connection = Doctrine_Manager::connection();
    $query = 'SELECT MAX(number) AS maximum FROM user_file';
    $statement = $connection->execute($query);
    $statement->execute();

    $resultset = $statement->fetch(PDO::FETCH_OBJ);
    $max_file_number = ($resultset) ? $resultset->maximum : '00000';
    return $max_file_number;
  }
  
  
  // get user files which have the most recent court date earlier than today
  public function getOutDatedFiles(Doctrine_Query $q)
  {
    $rootAlias = $q->getRootAlias();
    
    $q->andWhere($rootAlias.'.status_id!=?', 38);  // no closed files
    $q->leftJoin($rootAlias.'.FileCourtDates cd')
        ->andWhere('cd.date < CURDATE()');
    return $q;
  }
  
  
  /* added by William, 28/01/2013: "UserFile" is the only model with an specific "mainFilter" method */
  public function mainFilter(Doctrine_Query $q, $extra_sql=null, $main_filter0=null)
  {
    return self::mainFilterBase($q, $extra_sql, $main_filter0);
  }
  
  
  static public function mainFilterBase(Doctrine_Query $q, $extra_sql=null, $main_filter0=null)
  {
    $rootAlias = $q->getRootAlias();
    $aux_user_obj = sfContext::getInstance()->getUser();
    
    $main_filter = ($main_filter0 !== null) ? $main_filter0 : sfContext::getInstance()->getUser()->getAttribute('main_filter', null);
    $main_filter = CommonTable::fixMainFilterValues($main_filter);
    
    if ($main_filter !== null) {
      $court_rel_add = false;
      
      if ($main_filter['first_name']['text'] != '') {
        $q->leftJoin($rootAlias . '.Client cl')
        ->andWhere('cl.first_name LIKE ?', '%'.$main_filter['first_name']['text'].'%');
      }
      
      if ($main_filter['last_name']['text'] != '') {
        if ($main_filter['first_name']['text'] == '') {
          $q->leftJoin($rootAlias . '.Client cl');
        }
        $q->andWhere('cl.last_name LIKE ?', '%'.$main_filter['last_name']['text'].'%');       
       }
      
      if ($main_filter['number']['text'] != '') {
        $number = (int)$main_filter['number']['text'];
        $number = str_pad((int)$number, 6, "0", STR_PAD_LEFT);
        $q->andWhere($rootAlias.'.number=?', $number);
      }
      
      if ($main_filter['court']['text'] != '') {
        $q->leftJoin($rootAlias.'.FileCourtDates cd')
        ->leftJoin('cd.Court ag')
        ->andWhere('ag.name LIKE ?', '%'.$main_filter['court']['text'].'%');
        $court_rel_add = true;
      }
      
      if ($main_filter['date']['text'] != '') {
        if (!$court_rel_add) {
          $q->leftJoin($rootAlias.'.FileCourtDates cd');
          $court_rel_add = true;
        }
        $q->andWhere('cd.date LIKE ?', '%'.$main_filter['date']['text'].'%');
      }
      
      if ($main_filter['listing']['text'] != '') {
        if (!$court_rel_add) {
          $q->leftJoin($rootAlias.'.FileCourtDates cd');
          $court_rel_add = true;
        }
        $q->leftJoin('cd.Listing li')
        ->andWhere('li.name LIKE ?', '%'.$main_filter['listing']['text'].'%');
      }
      
      if ($main_filter['charge']['text'] != '') {
        $q->leftJoin($rootAlias . '.FileCharges ch')
        ->andWhere('ch.charge LIKE ?', '%'.$main_filter['charge']['text'].'%');
      }
      
      if ($main_filter['informant']['text'] != '') {
        $q->leftJoin($rootAlias . '.Informant in')
        ->andWhere($aux_user_obj->buildComplexQuery($main_filter['informant']['text'], 'in'));
      }
      
      if ($main_filter['solicitor']['text'] != '') {
        $q->leftJoin($rootAlias . '.Solicitor so')
        ->andWhere($aux_user_obj->buildComplexQuery($main_filter['solicitor']['text'], 'so'));
      }

      $q = CommonTable::setExtraSQL($q, $court_rel_add, true, 'UserFile', $rootAlias, $extra_sql);
    }
    
    return $q;
  }
}