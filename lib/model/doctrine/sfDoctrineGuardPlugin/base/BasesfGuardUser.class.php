<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $Agencies
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $sfGuardUserAgency
 * @property Doctrine_Collection $ReceiverCorrespondences
 * @property Doctrine_Collection $SenderCorrespondences
 * @property Doctrine_Collection $JudgeCourtDates
 * @property Doctrine_Collection $AppearingCourtDates
 * @property Doctrine_Collection $CoordinatorCourtDates
 * @property Doctrine_Collection $BarristerCourtDates
 * @property Doctrine_Collection $Document
 * @property Doctrine_Collection $Fee
 * @property Doctrine_Collection $FeeDetail
 * @property Doctrine_Collection $FileAttachement
 * @property Doctrine_Collection $LegalAid
 * @property Doctrine_Collection $Receipt
 * @property Doctrine_Collection $SettingParam
 * @property sfGuardUserProfile $UserProfiles
 * @property Doctrine_Collection $RelatedUserProfiles
 * @property Doctrine_Collection $ShortMessage
 * @property Doctrine_Collection $Task
 * @property Doctrine_Collection $TaskByTasks
 * @property Doctrine_Collection $TaskBy2Tasks
 * @property Doctrine_Collection $TaskForTasks
 * @property Doctrine_Collection $ClientUserFiles
 * @property Doctrine_Collection $SolicitorUserFiles
 * @property Doctrine_Collection $InformantUserFiles
 * @property Doctrine_Collection $ProsecutorUserFiles
 * @property Doctrine_Collection $BarristerUserFiles
 * 
 * @method string                getFirstName()               Returns the current record's "first_name" value
 * @method string                getLastName()                Returns the current record's "last_name" value
 * @method string                getEmailAddress()            Returns the current record's "email_address" value
 * @method string                getUsername()                Returns the current record's "username" value
 * @method string                getAlgorithm()               Returns the current record's "algorithm" value
 * @method string                getSalt()                    Returns the current record's "salt" value
 * @method string                getPassword()                Returns the current record's "password" value
 * @method boolean               getIsActive()                Returns the current record's "is_active" value
 * @method boolean               getIsSuperAdmin()            Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()               Returns the current record's "last_login" value
 * @method Doctrine_Collection   getGroups()                  Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()             Returns the current record's "Permissions" collection
 * @method Doctrine_Collection   getAgencies()                Returns the current record's "Agencies" collection
 * @method Doctrine_Collection   getSfGuardUserPermission()   Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()        Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()            Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()          Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getSfGuardUserAgency()       Returns the current record's "sfGuardUserAgency" collection
 * @method Doctrine_Collection   getReceiverCorrespondences() Returns the current record's "ReceiverCorrespondences" collection
 * @method Doctrine_Collection   getSenderCorrespondences()   Returns the current record's "SenderCorrespondences" collection
 * @method Doctrine_Collection   getJudgeCourtDates()         Returns the current record's "JudgeCourtDates" collection
 * @method Doctrine_Collection   getAppearingCourtDates()     Returns the current record's "AppearingCourtDates" collection
 * @method Doctrine_Collection   getCoordinatorCourtDates()   Returns the current record's "CoordinatorCourtDates" collection
 * @method Doctrine_Collection   getBarristerCourtDates()     Returns the current record's "BarristerCourtDates" collection
 * @method Doctrine_Collection   getDocument()                Returns the current record's "Document" collection
 * @method Doctrine_Collection   getFee()                     Returns the current record's "Fee" collection
 * @method Doctrine_Collection   getFeeDetail()               Returns the current record's "FeeDetail" collection
 * @method Doctrine_Collection   getFileAttachement()         Returns the current record's "FileAttachement" collection
 * @method Doctrine_Collection   getLegalAid()                Returns the current record's "LegalAid" collection
 * @method Doctrine_Collection   getReceipt()                 Returns the current record's "Receipt" collection
 * @method Doctrine_Collection   getSettingParam()            Returns the current record's "SettingParam" collection
 * @method sfGuardUserProfile    getUserProfiles()            Returns the current record's "UserProfiles" value
 * @method Doctrine_Collection   getRelatedUserProfiles()     Returns the current record's "RelatedUserProfiles" collection
 * @method Doctrine_Collection   getShortMessage()            Returns the current record's "ShortMessage" collection
 * @method Doctrine_Collection   getTask()                    Returns the current record's "Task" collection
 * @method Doctrine_Collection   getTaskByTasks()             Returns the current record's "TaskByTasks" collection
 * @method Doctrine_Collection   getTaskBy2Tasks()            Returns the current record's "TaskBy2Tasks" collection
 * @method Doctrine_Collection   getTaskForTasks()            Returns the current record's "TaskForTasks" collection
 * @method Doctrine_Collection   getClientUserFiles()         Returns the current record's "ClientUserFiles" collection
 * @method Doctrine_Collection   getSolicitorUserFiles()      Returns the current record's "SolicitorUserFiles" collection
 * @method Doctrine_Collection   getInformantUserFiles()      Returns the current record's "InformantUserFiles" collection
 * @method Doctrine_Collection   getProsecutorUserFiles()     Returns the current record's "ProsecutorUserFiles" collection
 * @method Doctrine_Collection   getBarristerUserFiles()      Returns the current record's "BarristerUserFiles" collection
 * @method sfGuardUser           setFirstName()               Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()                Sets the current record's "last_name" value
 * @method sfGuardUser           setEmailAddress()            Sets the current record's "email_address" value
 * @method sfGuardUser           setUsername()                Sets the current record's "username" value
 * @method sfGuardUser           setAlgorithm()               Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                    Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()                Sets the current record's "password" value
 * @method sfGuardUser           setIsActive()                Sets the current record's "is_active" value
 * @method sfGuardUser           setIsSuperAdmin()            Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()               Sets the current record's "last_login" value
 * @method sfGuardUser           setGroups()                  Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()             Sets the current record's "Permissions" collection
 * @method sfGuardUser           setAgencies()                Sets the current record's "Agencies" collection
 * @method sfGuardUser           setSfGuardUserPermission()   Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()        Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()            Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()          Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setSfGuardUserAgency()       Sets the current record's "sfGuardUserAgency" collection
 * @method sfGuardUser           setReceiverCorrespondences() Sets the current record's "ReceiverCorrespondences" collection
 * @method sfGuardUser           setSenderCorrespondences()   Sets the current record's "SenderCorrespondences" collection
 * @method sfGuardUser           setJudgeCourtDates()         Sets the current record's "JudgeCourtDates" collection
 * @method sfGuardUser           setAppearingCourtDates()     Sets the current record's "AppearingCourtDates" collection
 * @method sfGuardUser           setCoordinatorCourtDates()   Sets the current record's "CoordinatorCourtDates" collection
 * @method sfGuardUser           setBarristerCourtDates()     Sets the current record's "BarristerCourtDates" collection
 * @method sfGuardUser           setDocument()                Sets the current record's "Document" collection
 * @method sfGuardUser           setFee()                     Sets the current record's "Fee" collection
 * @method sfGuardUser           setFeeDetail()               Sets the current record's "FeeDetail" collection
 * @method sfGuardUser           setFileAttachement()         Sets the current record's "FileAttachement" collection
 * @method sfGuardUser           setLegalAid()                Sets the current record's "LegalAid" collection
 * @method sfGuardUser           setReceipt()                 Sets the current record's "Receipt" collection
 * @method sfGuardUser           setSettingParam()            Sets the current record's "SettingParam" collection
 * @method sfGuardUser           setUserProfiles()            Sets the current record's "UserProfiles" value
 * @method sfGuardUser           setRelatedUserProfiles()     Sets the current record's "RelatedUserProfiles" collection
 * @method sfGuardUser           setShortMessage()            Sets the current record's "ShortMessage" collection
 * @method sfGuardUser           setTask()                    Sets the current record's "Task" collection
 * @method sfGuardUser           setTaskByTasks()             Sets the current record's "TaskByTasks" collection
 * @method sfGuardUser           setTaskBy2Tasks()            Sets the current record's "TaskBy2Tasks" collection
 * @method sfGuardUser           setTaskForTasks()            Sets the current record's "TaskForTasks" collection
 * @method sfGuardUser           setClientUserFiles()         Sets the current record's "ClientUserFiles" collection
 * @method sfGuardUser           setSolicitorUserFiles()      Sets the current record's "SolicitorUserFiles" collection
 * @method sfGuardUser           setInformantUserFiles()      Sets the current record's "InformantUserFiles" collection
 * @method sfGuardUser           setProsecutorUserFiles()     Sets the current record's "ProsecutorUserFiles" collection
 * @method sfGuardUser           setBarristerUserFiles()      Sets the current record's "BarristerUserFiles" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
        $this->index('first_name_idx', array(
             'fields' => 'first_name',
             ));
        $this->index('last_name_idx', array(
             'fields' => 'last_name',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasMany('Agency as Agencies', array(
             'refClass' => 'sfGuardUserAgency',
             'local' => 'user_id',
             'foreign' => 'agency_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserAgency', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Correspondence as ReceiverCorrespondences', array(
             'local' => 'id',
             'foreign' => 'receiver_id'));

        $this->hasMany('Correspondence as SenderCorrespondences', array(
             'local' => 'id',
             'foreign' => 'sender_id'));

        $this->hasMany('CourtDate as JudgeCourtDates', array(
             'local' => 'id',
             'foreign' => 'judge_id'));

        $this->hasMany('CourtDate as AppearingCourtDates', array(
             'local' => 'id',
             'foreign' => 'appearing_id'));

        $this->hasMany('CourtDate as CoordinatorCourtDates', array(
             'local' => 'id',
             'foreign' => 'coordinator_id'));

        $this->hasMany('CourtDate as BarristerCourtDates', array(
             'local' => 'id',
             'foreign' => 'barrister_id'));

        $this->hasMany('Document', array(
             'local' => 'id',
             'foreign' => 'updated_by_id'));

        $this->hasMany('Fee', array(
             'local' => 'id',
             'foreign' => 'appear_by_whom_id'));

        $this->hasMany('FeeDetail', array(
             'local' => 'id',
             'foreign' => 'by_who_id'));

        $this->hasMany('FileAttachement', array(
             'local' => 'id',
             'foreign' => 'updated_by_id'));

        $this->hasMany('LegalAid', array(
             'local' => 'id',
             'foreign' => 'assigment_officer_id'));

        $this->hasMany('Receipt', array(
             'local' => 'id',
             'foreign' => 'received_by_id'));

        $this->hasMany('SettingParam', array(
             'local' => 'id',
             'foreign' => 'updated_by_id'));

        $this->hasOne('sfGuardUserProfile as UserProfiles', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserProfile as RelatedUserProfiles', array(
             'local' => 'id',
             'foreign' => 'related_user_id'));

        $this->hasMany('ShortMessage', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Task', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Task as TaskByTasks', array(
             'local' => 'id',
             'foreign' => 'task_by_id'));

        $this->hasMany('Task as TaskBy2Tasks', array(
             'local' => 'id',
             'foreign' => 'task_by2_id'));

        $this->hasMany('Task as TaskForTasks', array(
             'local' => 'id',
             'foreign' => 'task_for_id'));

        $this->hasMany('UserFile as ClientUserFiles', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('UserFile as SolicitorUserFiles', array(
             'local' => 'id',
             'foreign' => 'solicitor_id'));

        $this->hasMany('UserFile as InformantUserFiles', array(
             'local' => 'id',
             'foreign' => 'informant_id'));

        $this->hasMany('UserFile as ProsecutorUserFiles', array(
             'local' => 'id',
             'foreign' => 'prosecutor_id'));

        $this->hasMany('UserFile as BarristerUserFiles', array(
             'local' => 'id',
             'foreign' => 'barrister_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}