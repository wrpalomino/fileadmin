<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{
  // overrite this procedure to return a more descriptive value for the id dropdowns
  public function __toString()
  {
    //return (string) $this->getName().' ('.$this->getUsername().')'; //original
    return (string) $this->getName();   // return only the name
  }
  
  public function getGroup()
  {
    return $this->Groups[0]->name;
  }
  
  public function obtainFullName($option='')
  {
    $full_name = $this->first_name.' '.$this->last_name;
    if ($option == 'w_honorific') {
      $abb = $this->getUserProfiles()->getHonorific()->getAbbreviation();
      $honorific = (!empty($abb)) ? $abb : $this->getUserProfiles()->getHonorific()->getValue();
      if (!empty($honorific)) $full_name = $honorific.' '.$full_name;
    }
    
    return $full_name;
  }
  
  public function obtainUserFileId($player)
  {
    $files = null;
    switch ($player) {
      case 'client':      $files = $this->getClientUserFiles();     break;
      case 'informant':   $files = $this->getInformantUserFiles();  break;
      case 'barrister':   $files = $this->getBarristerUserFiles();  break;
      case 'prosecutor':  $files = $this->getProsecutorUserFiles(); break;
    }
    
    return ( $files && (count($files) > 0) ) ? $files[count($files)-1]->getId() : null;
  }
  
  public function obtainClientId($player)
  {
    $id = null;
    $files = null;
    switch ($player) {
      case 'user':
      case 'client':      $id = $this->getId();                     break;
      case 'informant':   $files = $this->getInformantUserFiles();  break;
      case 'barrister':   $files = $this->getBarristerUserFiles();  break;
      case 'prosecutor':  $files = $this->getProsecutorUserFiles(); break;
    }
    if ( $files && (count($files) > 0) ) {
      $id = $files[count($files)-1]->getClient()->getId();
    }
    
    return $id;
  }
  
  
  // set email_address as "null" when it is an empty string
  public function save(Doctrine_Connection $conn = null)
  {
    $this->setEmailAddress(trim($this->getEmailAddress()));
    if($this->getEmailAddress() == '') {
      $this->setEmailAddress(null);
    }
    return parent::save();
  }
  
  // added by William, 11/05/2013: set client's data from user_file client's data section
  public function setDataFromFile($user_file)
  {
    if ($user_file) {
      $this->first_name = $user_file->first_name;
      $this->last_name = $user_file->last_name;
      $this->UserProfiles->honorific_id =         $user_file->honorific_id;
      $this->UserProfiles->preferred_contact_id = $user_file->preferred_contact_id;
      $this->UserProfiles->street =               $user_file->street;
      $this->UserProfiles->suburb =               $user_file->suburb;
      $this->UserProfiles->postcode =             $user_file->postcode;
      $this->UserProfiles->city =                 $user_file->city;
      $this->UserProfiles->state =                $user_file->state;
      $this->UserProfiles->home_phone =           $user_file->home_phone;
      $this->UserProfiles->work_phone =           $user_file->work_phone;
      $this->UserProfiles->mobile =               $user_file->mobile;
      $this->UserProfiles->other_phone =          $user_file->other_phone;
      $this->UserProfiles->fax =                  $user_file->fax;
      $this->email_address =                      $user_file->email;
    }
  }
  
  
  public function getContactData($option='p&f')
  {
    $contact_info = $this->UserProfiles->getContactData($option);
    if ($option == 'all') {
      $email = (trim($this->getEmailAddress())!='') ? trim($this->getEmailAddress()) : "";
      if ($email != "") $contact_info.= "\nEmail: ".$email;
    }
    
    return $contact_info;
  }
  
  
  public function getInitials()
  {
    return strtoupper(substr(trim($this->first_name), 0, 1).substr(trim($this->last_name), 0, 1));
  }
  
}