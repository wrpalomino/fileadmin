<?php

/**
 * BaseInvoice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $number
 * @property date $date
 * @property decimal $amount
 * @property decimal $amount_paid
 * @property decimal $amount_due
 * @property integer $fee_id
 * @property integer $type_id
 * @property integer $status_id
 * @property integer $court_date_id
 * @property integer $document_id
 * @property Fee $Fee
 * @property InvoiceType $InvoiceType
 * @property Status $Status
 * @property CourtDate $CourtDate
 * @property Document $Document
 * 
 * @method string      getNumber()        Returns the current record's "number" value
 * @method date        getDate()          Returns the current record's "date" value
 * @method decimal     getAmount()        Returns the current record's "amount" value
 * @method decimal     getAmountPaid()    Returns the current record's "amount_paid" value
 * @method decimal     getAmountDue()     Returns the current record's "amount_due" value
 * @method integer     getFeeId()         Returns the current record's "fee_id" value
 * @method integer     getTypeId()        Returns the current record's "type_id" value
 * @method integer     getStatusId()      Returns the current record's "status_id" value
 * @method integer     getCourtDateId()   Returns the current record's "court_date_id" value
 * @method integer     getDocumentId()    Returns the current record's "document_id" value
 * @method Fee         getFee()           Returns the current record's "Fee" value
 * @method InvoiceType getInvoiceType()   Returns the current record's "InvoiceType" value
 * @method Status      getStatus()        Returns the current record's "Status" value
 * @method CourtDate   getCourtDate()     Returns the current record's "CourtDate" value
 * @method Document    getDocument()      Returns the current record's "Document" value
 * @method Invoice     setNumber()        Sets the current record's "number" value
 * @method Invoice     setDate()          Sets the current record's "date" value
 * @method Invoice     setAmount()        Sets the current record's "amount" value
 * @method Invoice     setAmountPaid()    Sets the current record's "amount_paid" value
 * @method Invoice     setAmountDue()     Sets the current record's "amount_due" value
 * @method Invoice     setFeeId()         Sets the current record's "fee_id" value
 * @method Invoice     setTypeId()        Sets the current record's "type_id" value
 * @method Invoice     setStatusId()      Sets the current record's "status_id" value
 * @method Invoice     setCourtDateId()   Sets the current record's "court_date_id" value
 * @method Invoice     setDocumentId()    Sets the current record's "document_id" value
 * @method Invoice     setFee()           Sets the current record's "Fee" value
 * @method Invoice     setInvoiceType()   Sets the current record's "InvoiceType" value
 * @method Invoice     setStatus()        Sets the current record's "Status" value
 * @method Invoice     setCourtDate()     Sets the current record's "CourtDate" value
 * @method Invoice     setDocument()      Sets the current record's "Document" value
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvoice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('invoice');
        $this->hasColumn('number', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 60,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('amount', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => 2,
             'notnull' => true,
             ));
        $this->hasColumn('amount_paid', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => 2,
             ));
        $this->hasColumn('amount_due', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => 2,
             ));
        $this->hasColumn('fee_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('status_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('court_date_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('document_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Fee', array(
             'local' => 'fee_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('InvoiceType', array(
             'local' => 'type_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Status', array(
             'local' => 'status_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('CourtDate', array(
             'local' => 'court_date_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Document', array(
             'local' => 'document_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}