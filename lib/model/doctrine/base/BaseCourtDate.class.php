<?php

/**
 * BaseCourtDate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property date $date
 * @property timestamp $time
 * @property string $result
 * @property string $instruction
 * @property integer $user_file_id
 * @property integer $court_id
 * @property integer $listing_id
 * @property integer $court_note_id
 * @property integer $appearing_type_id
 * @property integer $judge_id
 * @property integer $appearing_id
 * @property integer $coordinator_id
 * @property integer $barrister_id
 * @property UserFile $UserFile
 * @property Agency $Court
 * @property Listing $Listing
 * @property CourtNote $CourtNote
 * @property AppearingType $AppearingType
 * @property sfGuardUser $Judge
 * @property sfGuardUser $Appearing
 * @property sfGuardUser $Coordinator
 * @property sfGuardUser $Barrister
 * @property Doctrine_Collection $Appeal
 * @property Doctrine_Collection $CommittalStream
 * @property Doctrine_Collection $Correspondence
 * @property Doctrine_Collection $Disbursement
 * @property Doctrine_Collection $Document
 * @property Doctrine_Collection $Fee
 * @property Doctrine_Collection $FeeAgreement
 * @property Doctrine_Collection $Invoice
 * @property Doctrine_Collection $Receipt
 * 
 * @method date                getDate()              Returns the current record's "date" value
 * @method timestamp           getTime()              Returns the current record's "time" value
 * @method string              getResult()            Returns the current record's "result" value
 * @method string              getInstruction()       Returns the current record's "instruction" value
 * @method integer             getUserFileId()        Returns the current record's "user_file_id" value
 * @method integer             getCourtId()           Returns the current record's "court_id" value
 * @method integer             getListingId()         Returns the current record's "listing_id" value
 * @method integer             getCourtNoteId()       Returns the current record's "court_note_id" value
 * @method integer             getAppearingTypeId()   Returns the current record's "appearing_type_id" value
 * @method integer             getJudgeId()           Returns the current record's "judge_id" value
 * @method integer             getAppearingId()       Returns the current record's "appearing_id" value
 * @method integer             getCoordinatorId()     Returns the current record's "coordinator_id" value
 * @method integer             getBarristerId()       Returns the current record's "barrister_id" value
 * @method UserFile            getUserFile()          Returns the current record's "UserFile" value
 * @method Agency              getCourt()             Returns the current record's "Court" value
 * @method Listing             getListing()           Returns the current record's "Listing" value
 * @method CourtNote           getCourtNote()         Returns the current record's "CourtNote" value
 * @method AppearingType       getAppearingType()     Returns the current record's "AppearingType" value
 * @method sfGuardUser         getJudge()             Returns the current record's "Judge" value
 * @method sfGuardUser         getAppearing()         Returns the current record's "Appearing" value
 * @method sfGuardUser         getCoordinator()       Returns the current record's "Coordinator" value
 * @method sfGuardUser         getBarrister()         Returns the current record's "Barrister" value
 * @method Doctrine_Collection getAppeal()            Returns the current record's "Appeal" collection
 * @method Doctrine_Collection getCommittalStream()   Returns the current record's "CommittalStream" collection
 * @method Doctrine_Collection getCorrespondence()    Returns the current record's "Correspondence" collection
 * @method Doctrine_Collection getDisbursement()      Returns the current record's "Disbursement" collection
 * @method Doctrine_Collection getDocument()          Returns the current record's "Document" collection
 * @method Doctrine_Collection getFee()               Returns the current record's "Fee" collection
 * @method Doctrine_Collection getFeeAgreement()      Returns the current record's "FeeAgreement" collection
 * @method Doctrine_Collection getInvoice()           Returns the current record's "Invoice" collection
 * @method Doctrine_Collection getReceipt()           Returns the current record's "Receipt" collection
 * @method CourtDate           setDate()              Sets the current record's "date" value
 * @method CourtDate           setTime()              Sets the current record's "time" value
 * @method CourtDate           setResult()            Sets the current record's "result" value
 * @method CourtDate           setInstruction()       Sets the current record's "instruction" value
 * @method CourtDate           setUserFileId()        Sets the current record's "user_file_id" value
 * @method CourtDate           setCourtId()           Sets the current record's "court_id" value
 * @method CourtDate           setListingId()         Sets the current record's "listing_id" value
 * @method CourtDate           setCourtNoteId()       Sets the current record's "court_note_id" value
 * @method CourtDate           setAppearingTypeId()   Sets the current record's "appearing_type_id" value
 * @method CourtDate           setJudgeId()           Sets the current record's "judge_id" value
 * @method CourtDate           setAppearingId()       Sets the current record's "appearing_id" value
 * @method CourtDate           setCoordinatorId()     Sets the current record's "coordinator_id" value
 * @method CourtDate           setBarristerId()       Sets the current record's "barrister_id" value
 * @method CourtDate           setUserFile()          Sets the current record's "UserFile" value
 * @method CourtDate           setCourt()             Sets the current record's "Court" value
 * @method CourtDate           setListing()           Sets the current record's "Listing" value
 * @method CourtDate           setCourtNote()         Sets the current record's "CourtNote" value
 * @method CourtDate           setAppearingType()     Sets the current record's "AppearingType" value
 * @method CourtDate           setJudge()             Sets the current record's "Judge" value
 * @method CourtDate           setAppearing()         Sets the current record's "Appearing" value
 * @method CourtDate           setCoordinator()       Sets the current record's "Coordinator" value
 * @method CourtDate           setBarrister()         Sets the current record's "Barrister" value
 * @method CourtDate           setAppeal()            Sets the current record's "Appeal" collection
 * @method CourtDate           setCommittalStream()   Sets the current record's "CommittalStream" collection
 * @method CourtDate           setCorrespondence()    Sets the current record's "Correspondence" collection
 * @method CourtDate           setDisbursement()      Sets the current record's "Disbursement" collection
 * @method CourtDate           setDocument()          Sets the current record's "Document" collection
 * @method CourtDate           setFee()               Sets the current record's "Fee" collection
 * @method CourtDate           setFeeAgreement()      Sets the current record's "FeeAgreement" collection
 * @method CourtDate           setInvoice()           Sets the current record's "Invoice" collection
 * @method CourtDate           setReceipt()           Sets the current record's "Receipt" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCourtDate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('court_date');
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('result', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('instruction', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_file_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('court_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('listing_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('court_note_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('appearing_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('judge_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('appearing_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('coordinator_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('barrister_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));


        $this->index('date_idx', array(
             'fields' => 'date',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserFile', array(
             'local' => 'user_file_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Agency as Court', array(
             'local' => 'court_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Listing', array(
             'local' => 'listing_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('CourtNote', array(
             'local' => 'court_note_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('AppearingType', array(
             'local' => 'appearing_type_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('sfGuardUser as Judge', array(
             'local' => 'judge_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('sfGuardUser as Appearing', array(
             'local' => 'appearing_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('sfGuardUser as Coordinator', array(
             'local' => 'coordinator_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('sfGuardUser as Barrister', array(
             'local' => 'barrister_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Appeal', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('CommittalStream', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('Correspondence', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('Disbursement', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('Document', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('Fee', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('FeeAgreement', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('Invoice', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $this->hasMany('Receipt', array(
             'local' => 'id',
             'foreign' => 'court_date_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}