<?php

/**
 * BaseListing
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property boolean $is_active
 * @property Doctrine_Collection $CourtDate
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method boolean             getIsActive()    Returns the current record's "is_active" value
 * @method Doctrine_Collection getCourtDate()   Returns the current record's "CourtDate" collection
 * @method Listing             setName()        Sets the current record's "name" value
 * @method Listing             setDescription() Sets the current record's "description" value
 * @method Listing             setIsActive()    Sets the current record's "is_active" value
 * @method Listing             setCourtDate()   Sets the current record's "CourtDate" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseListing extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('listing');
        $this->hasColumn('name', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));


        $this->index('name_idx', array(
             'fields' => 'name',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CourtDate', array(
             'local' => 'id',
             'foreign' => 'listing_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}