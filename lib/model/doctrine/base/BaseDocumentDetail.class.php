<?php

/**
 * BaseDocumentDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $field1
 * @property string $field2
 * @property string $field3
 * @property string $field4
 * @property string $field5
 * @property string $field6
 * @property string $field7
 * @property string $field8
 * @property string $field9
 * @property string $field10
 * @property integer $document_id
 * @property integer $document_template_id
 * @property Document $Document
 * @property DocumentTemplate $DocumentTemplate
 * 
 * @method string           getField1()               Returns the current record's "field1" value
 * @method string           getField2()               Returns the current record's "field2" value
 * @method string           getField3()               Returns the current record's "field3" value
 * @method string           getField4()               Returns the current record's "field4" value
 * @method string           getField5()               Returns the current record's "field5" value
 * @method string           getField6()               Returns the current record's "field6" value
 * @method string           getField7()               Returns the current record's "field7" value
 * @method string           getField8()               Returns the current record's "field8" value
 * @method string           getField9()               Returns the current record's "field9" value
 * @method string           getField10()              Returns the current record's "field10" value
 * @method integer          getDocumentId()           Returns the current record's "document_id" value
 * @method integer          getDocumentTemplateId()   Returns the current record's "document_template_id" value
 * @method Document         getDocument()             Returns the current record's "Document" value
 * @method DocumentTemplate getDocumentTemplate()     Returns the current record's "DocumentTemplate" value
 * @method DocumentDetail   setField1()               Sets the current record's "field1" value
 * @method DocumentDetail   setField2()               Sets the current record's "field2" value
 * @method DocumentDetail   setField3()               Sets the current record's "field3" value
 * @method DocumentDetail   setField4()               Sets the current record's "field4" value
 * @method DocumentDetail   setField5()               Sets the current record's "field5" value
 * @method DocumentDetail   setField6()               Sets the current record's "field6" value
 * @method DocumentDetail   setField7()               Sets the current record's "field7" value
 * @method DocumentDetail   setField8()               Sets the current record's "field8" value
 * @method DocumentDetail   setField9()               Sets the current record's "field9" value
 * @method DocumentDetail   setField10()              Sets the current record's "field10" value
 * @method DocumentDetail   setDocumentId()           Sets the current record's "document_id" value
 * @method DocumentDetail   setDocumentTemplateId()   Sets the current record's "document_template_id" value
 * @method DocumentDetail   setDocument()             Sets the current record's "Document" value
 * @method DocumentDetail   setDocumentTemplate()     Sets the current record's "DocumentTemplate" value
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocumentDetail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('document_detail');
        $this->hasColumn('field1', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field3', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field4', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field5', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field6', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field7', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field8', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field9', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('field10', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('document_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('document_template_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Document', array(
             'local' => 'document_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('DocumentTemplate', array(
             'local' => 'document_template_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}