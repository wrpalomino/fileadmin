<?php

/**
 * BaseDocumentType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $short_name
 * @property string $description
 * @property boolean $is_active
 * @property integer $admin_section_id
 * @property AdminSection $AdminSection
 * @property Doctrine_Collection $AdminContent
 * @property Doctrine_Collection $Document
 * @property Doctrine_Collection $DocumentTemplate
 * @property Doctrine_Collection $FileAttachement
 * 
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getShortName()        Returns the current record's "short_name" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method boolean             getIsActive()         Returns the current record's "is_active" value
 * @method integer             getAdminSectionId()   Returns the current record's "admin_section_id" value
 * @method AdminSection        getAdminSection()     Returns the current record's "AdminSection" value
 * @method Doctrine_Collection getAdminContent()     Returns the current record's "AdminContent" collection
 * @method Doctrine_Collection getDocument()         Returns the current record's "Document" collection
 * @method Doctrine_Collection getDocumentTemplate() Returns the current record's "DocumentTemplate" collection
 * @method Doctrine_Collection getFileAttachement()  Returns the current record's "FileAttachement" collection
 * @method DocumentType        setName()             Sets the current record's "name" value
 * @method DocumentType        setShortName()        Sets the current record's "short_name" value
 * @method DocumentType        setDescription()      Sets the current record's "description" value
 * @method DocumentType        setIsActive()         Sets the current record's "is_active" value
 * @method DocumentType        setAdminSectionId()   Sets the current record's "admin_section_id" value
 * @method DocumentType        setAdminSection()     Sets the current record's "AdminSection" value
 * @method DocumentType        setAdminContent()     Sets the current record's "AdminContent" collection
 * @method DocumentType        setDocument()         Sets the current record's "Document" collection
 * @method DocumentType        setDocumentTemplate() Sets the current record's "DocumentTemplate" collection
 * @method DocumentType        setFileAttachement()  Sets the current record's "FileAttachement" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocumentType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('document_type');
        $this->hasColumn('name', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('short_name', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('admin_section_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AdminSection', array(
             'local' => 'admin_section_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('AdminContent', array(
             'local' => 'id',
             'foreign' => 'document_type_id'));

        $this->hasMany('Document', array(
             'local' => 'id',
             'foreign' => 'document_type_id'));

        $this->hasMany('DocumentTemplate', array(
             'local' => 'id',
             'foreign' => 'document_type_id'));

        $this->hasMany('FileAttachement', array(
             'local' => 'id',
             'foreign' => 'document_type_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}