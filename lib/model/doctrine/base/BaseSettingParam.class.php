<?php

/**
 * BaseSettingParam
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $value
 * @property integer $updated_by_id
 * @property sfGuardUser $User
 * 
 * @method string       getName()          Returns the current record's "name" value
 * @method string       getValue()         Returns the current record's "value" value
 * @method integer      getUpdatedById()   Returns the current record's "updated_by_id" value
 * @method sfGuardUser  getUser()          Returns the current record's "User" value
 * @method SettingParam setName()          Sets the current record's "name" value
 * @method SettingParam setValue()         Sets the current record's "value" value
 * @method SettingParam setUpdatedById()   Sets the current record's "updated_by_id" value
 * @method SettingParam setUser()          Sets the current record's "User" value
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSettingParam extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('setting_param');
        $this->hasColumn('name', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('updated_by_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'updated_by_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}