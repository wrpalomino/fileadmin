<?php

/**
 * BasePreferredContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $value
 * @property boolean $is_active
 * @property Doctrine_Collection $sfGuardUserProfile
 * @property Doctrine_Collection $UserFile
 * 
 * @method string              getValue()              Returns the current record's "value" value
 * @method boolean             getIsActive()           Returns the current record's "is_active" value
 * @method Doctrine_Collection getSfGuardUserProfile() Returns the current record's "sfGuardUserProfile" collection
 * @method Doctrine_Collection getUserFile()           Returns the current record's "UserFile" collection
 * @method PreferredContact    setValue()              Sets the current record's "value" value
 * @method PreferredContact    setIsActive()           Sets the current record's "is_active" value
 * @method PreferredContact    setSfGuardUserProfile() Sets the current record's "sfGuardUserProfile" collection
 * @method PreferredContact    setUserFile()           Sets the current record's "UserFile" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePreferredContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('preferred_contact');
        $this->hasColumn('value', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUserProfile', array(
             'local' => 'id',
             'foreign' => 'preferred_contact_id'));

        $this->hasMany('UserFile', array(
             'local' => 'id',
             'foreign' => 'preferred_contact_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}