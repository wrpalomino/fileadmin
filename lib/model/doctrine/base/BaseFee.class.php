<?php

/**
 * BaseFee
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property decimal $amount
 * @property string $vla
 * @property string $paid
 * @property string $need_invoicing
 * @property timestamp $filled_out_date
 * @property string $funding_status_comment
 * @property string $invoice_number
 * @property integer $court_date_id
 * @property integer $appear_by_whom_id
 * @property integer $status_id
 * @property CourtDate $CourtDate
 * @property sfGuardUser $AppearByWhom
 * @property Status $Status
 * @property Doctrine_Collection $FeeDetails
 * @property Doctrine_Collection $Invoice
 * @property Doctrine_Collection $Receipt
 * 
 * @method decimal             getAmount()                 Returns the current record's "amount" value
 * @method string              getVla()                    Returns the current record's "vla" value
 * @method string              getPaid()                   Returns the current record's "paid" value
 * @method string              getNeedInvoicing()          Returns the current record's "need_invoicing" value
 * @method timestamp           getFilledOutDate()          Returns the current record's "filled_out_date" value
 * @method string              getFundingStatusComment()   Returns the current record's "funding_status_comment" value
 * @method string              getInvoiceNumber()          Returns the current record's "invoice_number" value
 * @method integer             getCourtDateId()            Returns the current record's "court_date_id" value
 * @method integer             getAppearByWhomId()         Returns the current record's "appear_by_whom_id" value
 * @method integer             getStatusId()               Returns the current record's "status_id" value
 * @method CourtDate           getCourtDate()              Returns the current record's "CourtDate" value
 * @method sfGuardUser         getAppearByWhom()           Returns the current record's "AppearByWhom" value
 * @method Status              getStatus()                 Returns the current record's "Status" value
 * @method Doctrine_Collection getFeeDetails()             Returns the current record's "FeeDetails" collection
 * @method Doctrine_Collection getInvoice()                Returns the current record's "Invoice" collection
 * @method Doctrine_Collection getReceipt()                Returns the current record's "Receipt" collection
 * @method Fee                 setAmount()                 Sets the current record's "amount" value
 * @method Fee                 setVla()                    Sets the current record's "vla" value
 * @method Fee                 setPaid()                   Sets the current record's "paid" value
 * @method Fee                 setNeedInvoicing()          Sets the current record's "need_invoicing" value
 * @method Fee                 setFilledOutDate()          Sets the current record's "filled_out_date" value
 * @method Fee                 setFundingStatusComment()   Sets the current record's "funding_status_comment" value
 * @method Fee                 setInvoiceNumber()          Sets the current record's "invoice_number" value
 * @method Fee                 setCourtDateId()            Sets the current record's "court_date_id" value
 * @method Fee                 setAppearByWhomId()         Sets the current record's "appear_by_whom_id" value
 * @method Fee                 setStatusId()               Sets the current record's "status_id" value
 * @method Fee                 setCourtDate()              Sets the current record's "CourtDate" value
 * @method Fee                 setAppearByWhom()           Sets the current record's "AppearByWhom" value
 * @method Fee                 setStatus()                 Sets the current record's "Status" value
 * @method Fee                 setFeeDetails()             Sets the current record's "FeeDetails" collection
 * @method Fee                 setInvoice()                Sets the current record's "Invoice" collection
 * @method Fee                 setReceipt()                Sets the current record's "Receipt" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFee extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fee');
        $this->hasColumn('amount', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => 2,
             'notnull' => true,
             ));
        $this->hasColumn('vla', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('paid', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('need_invoicing', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('filled_out_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('funding_status_comment', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('invoice_number', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             ));
        $this->hasColumn('court_date_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('appear_by_whom_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('status_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CourtDate', array(
             'local' => 'court_date_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('sfGuardUser as AppearByWhom', array(
             'local' => 'appear_by_whom_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Status', array(
             'local' => 'status_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('FeeDetail as FeeDetails', array(
             'local' => 'id',
             'foreign' => 'fee_id'));

        $this->hasMany('Invoice', array(
             'local' => 'id',
             'foreign' => 'fee_id'));

        $this->hasMany('Receipt', array(
             'local' => 'id',
             'foreign' => 'fee_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}